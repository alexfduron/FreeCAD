import FreeCAD as App
import FreeCADGui as Gui
from PySide import QtGui


def Limpiar_Pantalla():
	mw = Gui.getMainWindow()
	rv = mw.findChild(QtGui.QTextEdit, "Report view")
	rv.clear()
	
	pc = mw.findChild(QtGui.QPlainTextEdit,"Python console")
	
	
def Cuerpo_X(Nombre):
	myObj = App.ActiveDocument.getObject(Nombre)
	return myObj
	
	
	
def Validar_Colision(Obj01_X, Obj02_X, Pintar = 'Cuerpo', Contador = 1):
	
	Lista_Vertices = []
	Lista_Caras = []
	Lista_Colores = []
	
	Obj01 = Cuerpo_X(Obj01_X)
	Obj02 = Cuerpo_X(Obj02_X)
	
	if Contador > 1:
		Memo_Colores = Obj01.ViewObject.DiffuseColor

	
	# aqui revisamos que las caras del objeto 2 tienen interseccion con las caras del objeto 1 (en colision)
	for f1 in range(0, len(Obj01.Shape.Faces)):
		for f2 in range(0, len(Obj02.Shape.Faces)):
			if Obj01.Shape.Faces[f1].BoundBox.intersect(Obj02.Shape.Faces[f2].BoundBox) == True:
				Lista_Caras.append(f1)
				
	Lista_Caras = sorted(list(set(Lista_Caras)))

	if len(Lista_Caras) == 0:
		Resultado = False
	else:
		Resultado = True
		
	
	# aqui pintamos los objetos y mostramos un mensaje al usuario
	if Resultado == True:
		if Pintar == 'Cuerpo':
			Obj01.ViewObject.ShapeAppearance = App.Material(DiffuseColor = (1.0, 0.0, 0.0))
		elif Pintar == 'Cara':
			
			# aqui pinto las caras que se encuentran en la lista de revision
			for f in range(0, len(Obj01.Shape.Faces)):
				
				if f in Lista_Caras:
					Lista_Colores.append((1.0, 0.0, 0.0))
				else:
					if Contador > 1:
						
						if Memo_Colores[f] == (1.0, 0.0, 0.0, 0.0):
							Lista_Colores.append((1.0, 0.0, 0.0))
						else:
							Lista_Colores.append((0.0, 1.0, 0.0))
					else:
						Lista_Colores.append((0.0, 1.0, 0.0))
			
			Obj01.ViewObject.DiffuseColor = Lista_Colores

		



Obj_Seleccion = Gui.Selection.getSelection()

Lista_Body = []
Lista_Index = []

# Limpiar_Pantalla():
Limpiar_Pantalla()


if len(Obj_Seleccion) > 0:
	for myObj in Obj_Seleccion:
		
		try:
			if 'Body' in myObj.Name:
				Lista_Body.append(myObj.Name)
				Lista_Index.append(1)
		except:
			pass
			
		try:
			if 'Body' in myObj.getParent().Name:
				Lista_Body.append(myObj.getParent().Name)
				Lista_Index.append(2)
		except:
			pass
			
		try:
			for k in range(0, len(myObj.Group)):
				if 'Body' in myObj.Group[k].Name:
					Lista_Body.append(myObj.Group[k].Name)
					Lista_Index.append(3)
		except:
			pass
		
	
		#Gui.ActiveDocument.getObject(myObj.Name).ShapeColor = (0.0, 1.0, 0.0))
		#Gui.ActiveDocument.getObject(myObj.Name).ShapeAppearance = App.Material(DiffuseColor = (0.0, 1.0, 0.0))
		if Lista_Index[-1] == 1:
			Gui.ActiveDocument.getObject(myObj.Name).DiffuseColor = [(0.0, 1.0, 0.0)]
		if Lista_Index[-1] == 2:
			Gui.ActiveDocument.getObject(myObj.getParent().Name).DiffuseColor = [(0.0, 1.0, 0.0)]
		if Lista_Index[-1] == 3:
			for k in range(0, len(myObj.Group)):
				Gui.ActiveDocument.getObject(myObj.Group[k].Name).DiffuseColor = [(0.0, 1.0, 0.0)]
			
	
	print()
	
	
		
	for Actor in Lista_Body:
		
		Vueltas = 0
		
		# Cuerpo_X(Nombre):
		print('Actor = ' + Cuerpo_X(Actor).Label)
		
		for Obstaculo in Lista_Body:
			if Actor == Obstaculo:
				continue
			print('--Obstaculo = ' + Cuerpo_X(Obstaculo).Label)
			
			
			if Cuerpo_X(Actor).Shape.BoundBox.intersect(Cuerpo_X(Obstaculo).Shape.BoundBox) == True:
				
				Vueltas += 1
				
				# Validar_Colision(Obj01, Obj02, Pintar = 'Cuerpo', Contador = 1):
				Validar_Colision(Actor, Obstaculo, 'Cara', Vueltas)
					
				print('-- -- En Colision')
				
		print()
		
else:
	
	App.Console.PrintMessage('No hay seleccion')

	


